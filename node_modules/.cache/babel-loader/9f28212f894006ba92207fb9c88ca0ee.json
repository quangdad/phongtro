{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { apiRegister, apiLogin } from '../../services/auth';\nexport const register = payload => async dispatch => {\n  try {\n    const response = await apiRegister(payload);\n\n    if ((response === null || response === void 0 ? void 0 : response.data.err) === 0) {\n      dispatch({\n        type: actionTypes.REGISTER_SUCCESS,\n        data: response.data.token\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REGISTER_FAIL,\n        data: response.data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: actionTypes.REGISTER_FAIL,\n      data: null\n    });\n  }\n};\nexport const login = payload => async dispatch => {\n  try {\n    const response = await apiLogin(payload);\n\n    if ((response === null || response === void 0 ? void 0 : response.data.err) === 0) {\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        data: response.data.token\n      });\n    } else {\n      dispatch({\n        type: actionTypes.LOGIN_FAIL,\n        data: response.data.msg\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      data: null\n    });\n  }\n};\nexport const logout = () => ({\n  type: actionTypes.LOGOUT\n});","map":{"version":3,"names":["actionTypes","apiRegister","apiLogin","register","payload","dispatch","response","data","err","type","REGISTER_SUCCESS","token","REGISTER_FAIL","msg","error","login","LOGIN_SUCCESS","LOGIN_FAIL","logout","LOGOUT"],"sources":["F:/PHONGTRO2/PHONGTRO/client/src/store/actions/auth.js"],"sourcesContent":["import actionTypes from './actionTypes'\r\nimport { apiRegister, apiLogin } from '../../services/auth'\r\n\r\nexport const register = (payload) => async (dispatch) => {\r\n    try {\r\n        const response = await apiRegister(payload)\r\n        if (response?.data.err === 0) {\r\n            dispatch({\r\n                type: actionTypes.REGISTER_SUCCESS,\r\n                data: response.data.token\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.REGISTER_FAIL,\r\n                data: response.data.msg\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.REGISTER_FAIL,\r\n            data: null\r\n        })\r\n    }\r\n}\r\nexport const login = (payload) => async (dispatch) => {\r\n    try {\r\n        const response = await apiLogin(payload)\r\n        if (response?.data.err === 0) {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_SUCCESS,\r\n                data: response.data.token\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_FAIL,\r\n                data: response.data.msg\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.LOGIN_FAIL,\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: actionTypes.LOGOUT\r\n})"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;EACrD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,WAAW,CAACG,OAAD,CAAlC;;IACA,IAAI,CAAAE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,CAAeC,GAAf,MAAuB,CAA3B,EAA8B;MAC1BH,QAAQ,CAAC;QACLI,IAAI,EAAET,WAAW,CAACU,gBADb;QAELH,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcI;MAFf,CAAD,CAAR;IAIH,CALD,MAKO;MACHN,QAAQ,CAAC;QACLI,IAAI,EAAET,WAAW,CAACY,aADb;QAELL,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcM;MAFf,CAAD,CAAR;IAIH;EAEJ,CAdD,CAcE,OAAOC,KAAP,EAAc;IACZT,QAAQ,CAAC;MACLI,IAAI,EAAET,WAAW,CAACY,aADb;MAELL,IAAI,EAAE;IAFD,CAAD,CAAR;EAIH;AACJ,CArBM;AAsBP,OAAO,MAAMQ,KAAK,GAAIX,OAAD,IAAa,MAAOC,QAAP,IAAoB;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACE,OAAD,CAA/B;;IACA,IAAI,CAAAE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,CAAeC,GAAf,MAAuB,CAA3B,EAA8B;MAC1BH,QAAQ,CAAC;QACLI,IAAI,EAAET,WAAW,CAACgB,aADb;QAELT,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcI;MAFf,CAAD,CAAR;IAIH,CALD,MAKO;MACHN,QAAQ,CAAC;QACLI,IAAI,EAAET,WAAW,CAACiB,UADb;QAELV,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcM;MAFf,CAAD,CAAR;IAIH;EAEJ,CAdD,CAcE,OAAOC,KAAP,EAAc;IACZT,QAAQ,CAAC;MACLI,IAAI,EAAET,WAAW,CAACiB,UADb;MAELV,IAAI,EAAE;IAFD,CAAD,CAAR;EAIH;AACJ,CArBM;AAuBP,OAAO,MAAMW,MAAM,GAAG,OAAO;EACzBT,IAAI,EAAET,WAAW,CAACmB;AADO,CAAP,CAAf"},"metadata":{},"sourceType":"module"}
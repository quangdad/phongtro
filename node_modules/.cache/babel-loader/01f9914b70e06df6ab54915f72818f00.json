{"ast":null,"code":"var _jsxFileName = \"F:\\\\PHONGTRO2\\\\PHONGTRO\\\\client\\\\src\\\\components\\\\InputForm.js\";\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = _ref => {\n  var _invalidFields$find;\n\n  let {\n    label,\n    value,\n    setValue,\n    keyPayload,\n    invalidFields,\n    setInvalidFields,\n    type\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: keyPayload,\n      className: \"text-xs\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type || 'text',\n      id: keyPayload,\n      className: \"outline-none bg-[#e8f0fe] p-2 rounded-md w-full\",\n      value: value,\n      onChange: e => setValue(prev => ({ ...prev,\n        [keyPayload]: e.target.value || ''\n      })),\n      onFocus: () => setInvalidFields && setInvalidFields([])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), (invalidFields === null || invalidFields === void 0 ? void 0 : invalidFields.some(i => i.name === keyPayload)) && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-red-500 italic\",\n      children: (_invalidFields$find = invalidFields.find(i => i.name === keyPayload)) === null || _invalidFields$find === void 0 ? void 0 : _invalidFields$find.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 65\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InputForm;\nexport default _c2 = /*#__PURE__*/memo(InputForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","InputForm","label","value","setValue","keyPayload","invalidFields","setInvalidFields","type","e","prev","target","some","i","name","find","message"],"sources":["F:/PHONGTRO2/PHONGTRO/client/src/components/InputForm.js"],"sourcesContent":["import React, { memo } from 'react'\r\n\r\nconst InputForm = ({ label, value, setValue, keyPayload, invalidFields, setInvalidFields, type }) => {\r\n    return (\r\n        <div>\r\n            <label htmlFor={keyPayload} className='text-xs' >{label}</label>\r\n            <input\r\n                type={type || 'text'}\r\n                id={keyPayload}\r\n                className='outline-none bg-[#e8f0fe] p-2 rounded-md w-full'\r\n                value={value}\r\n                onChange={(e) => setValue(prev => ({ ...prev, [keyPayload]: e.target.value || '' }))}\r\n                onFocus={() => setInvalidFields && setInvalidFields([])}\r\n            />\r\n            {invalidFields?.some(i => i.name === keyPayload) && <small className='text-red-500 italic' >{invalidFields.find(i => i.name === keyPayload)?.message}</small>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(InputForm)"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;AAEA,MAAMC,SAAS,GAAG,QAAmF;EAAA;;EAAA,IAAlF;IAAEC,KAAF;IAASC,KAAT;IAAgBC,QAAhB;IAA0BC,UAA1B;IAAsCC,aAAtC;IAAqDC,gBAArD;IAAuEC;EAAvE,CAAkF;EACjG,oBACI;IAAA,wBACI;MAAO,OAAO,EAAEH,UAAhB;MAA4B,SAAS,EAAC,SAAtC;MAAA,UAAkDH;IAAlD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,IAAI,EAAEM,IAAI,IAAI,MADlB;MAEI,EAAE,EAAEH,UAFR;MAGI,SAAS,EAAC,iDAHd;MAII,KAAK,EAAEF,KAJX;MAKI,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;QAAW,CAACL,UAAD,GAAcI,CAAC,CAACE,MAAF,CAASR,KAAT,IAAkB;MAA3C,CAAL,CAAL,CAL7B;MAMI,OAAO,EAAE,MAAMI,gBAAgB,IAAIA,gBAAgB,CAAC,EAAD;IANvD;MAAA;MAAA;MAAA;IAAA,QAFJ,EAUK,CAAAD,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEM,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWT,UAApC,mBAAmD;MAAO,SAAS,EAAC,qBAAjB;MAAA,iCAAyCC,aAAa,CAACS,IAAd,CAAmBF,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWT,UAAnC,CAAzC,wDAAyC,oBAAgDW;IAAzF;MAAA;MAAA;MAAA;IAAA,QAVxD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAfD;;KAAMf,S;AAiBN,kCAAeD,IAAI,CAACC,SAAD,CAAnB"},"metadata":{},"sourceType":"module"}
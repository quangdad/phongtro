{"ast":null,"code":"var _jsxFileName = \"F:\\\\PHONGTRO2\\\\PHONGTRO\\\\client\\\\src\\\\components\\\\Paypal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { apiUpdateReportPaypal } from \"../services\";\nimport { PayPalScriptProvider, PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\nimport { toast } from \"react-toastify\"; // This values are the props in the UI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  \"layout\": \"vertical\"\n}; // Custom component to wrap the PayPalButtons and handle currency changes\n\nconst ButtonWrapper = _ref => {\n  _s();\n\n  let {\n    currency,\n    showSpinner,\n    amount,\n    pid,\n    days,\n    setIsExpired,\n    setUpdateData\n  } = _ref;\n  // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\n  // This is the main reason to wrap the PayPalButtons in a new component\n  const [{\n    options,\n    isPending\n  }, dispatch] = usePayPalScriptReducer();\n  useEffect(() => {\n    dispatch({\n      type: \"resetOptions\",\n      value: { ...options,\n        currency: currency\n      }\n    });\n  }, [currency, showSpinner]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showSpinner && isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: style,\n      disabled: false,\n      forceReRender: [amount, currency, style],\n      fundingSource: undefined,\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              currency_code: currency,\n              value: amount\n            }\n          }]\n        }).then(orderId => {\n          // Your code here after create the order\n          return orderId;\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(async function (rs) {\n          if (rs.status === 'COMPLETED') {\n            const response = await apiUpdateReportPaypal({\n              pid,\n              days\n            });\n\n            if (response.data.err === 0) {\n              setIsExpired(null);\n              toast.success('Gia hạn thành công');\n              setUpdateData(prev => !prev);\n            } else toast.error('Gia hạn thất bại');\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ButtonWrapper, \"97F4ge0M9DD6AP5/rccpuT1ImVM=\", false, function () {\n  return [usePayPalScriptReducer];\n});\n\n_c = ButtonWrapper;\nexport default function Paypal(_ref2) {\n  let {\n    amount,\n    pid,\n    days,\n    setIsExpired,\n    setUpdateData\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"750px\",\n      minHeight: \"200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"test\",\n        components: \"buttons\",\n        currency: \"USD\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        currency: \"USD\",\n        showSpinner: false,\n        amount: amount,\n        days: days,\n        pid: pid,\n        setIsExpired: setIsExpired,\n        setUpdateData: setUpdateData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Paypal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"Paypal\");","map":{"version":3,"names":["useEffect","apiUpdateReportPaypal","PayPalScriptProvider","PayPalButtons","usePayPalScriptReducer","toast","style","ButtonWrapper","currency","showSpinner","amount","pid","days","setIsExpired","setUpdateData","options","isPending","dispatch","type","value","undefined","data","actions","order","create","purchase_units","currency_code","then","orderId","capture","rs","status","response","err","success","prev","error","Paypal","maxWidth","minHeight","components"],"sources":["F:/PHONGTRO2/PHONGTRO/client/src/components/Paypal.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { apiUpdateReportPaypal } from \"../services\";\r\nimport {\r\n    PayPalScriptProvider,\r\n    PayPalButtons,\r\n    usePayPalScriptReducer\r\n} from \"@paypal/react-paypal-js\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// This values are the props in the UI\r\nconst style = { \"layout\": \"vertical\" };\r\n\r\n// Custom component to wrap the PayPalButtons and handle currency changes\r\nconst ButtonWrapper = ({ currency, showSpinner, amount, pid, days, setIsExpired, setUpdateData }) => {\r\n    // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\r\n    // This is the main reason to wrap the PayPalButtons in a new component\r\n    const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"resetOptions\",\r\n            value: {\r\n                ...options,\r\n                currency: currency,\r\n            },\r\n        });\r\n    }, [currency, showSpinner]);\r\n\r\n\r\n    return (<>\r\n        {(showSpinner && isPending) && <div className=\"spinner\" />}\r\n        <PayPalButtons\r\n            style={style}\r\n            disabled={false}\r\n            forceReRender={[amount, currency, style]}\r\n            fundingSource={undefined}\r\n            createOrder={(data, actions) => {\r\n                return actions.order\r\n                    .create({\r\n                        purchase_units: [\r\n                            {\r\n                                amount: {\r\n                                    currency_code: currency,\r\n                                    value: amount,\r\n                                },\r\n                            },\r\n                        ],\r\n                    })\r\n                    .then((orderId) => {\r\n                        // Your code here after create the order\r\n                        return orderId;\r\n                    });\r\n            }}\r\n            onApprove={function (data, actions) {\r\n                return actions.order.capture().then(async function (rs) {\r\n                    if (rs.status === 'COMPLETED') {\r\n                        const response = await apiUpdateReportPaypal({ pid, days })\r\n                        if (response.data.err === 0) {\r\n                            setIsExpired(null)\r\n                            toast.success('Gia hạn thành công')\r\n                            setUpdateData(prev => !prev)\r\n                        } else toast.error('Gia hạn thất bại')\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n    </>\r\n    );\r\n}\r\n\r\nexport default function Paypal({ amount, pid, days, setIsExpired, setUpdateData }) {\r\n    return (\r\n        <div style={{ maxWidth: \"750px\", minHeight: \"200px\" }}>\r\n            <PayPalScriptProvider\r\n                options={{\r\n                    \"client-id\": \"test\",\r\n                    components: \"buttons\",\r\n                    currency: \"USD\"\r\n                }}\r\n            >\r\n                <ButtonWrapper\r\n                    currency={\"USD\"}\r\n                    showSpinner={false}\r\n                    amount={amount}\r\n                    days={days}\r\n                    pid={pid}\r\n                    setIsExpired={setIsExpired}\r\n                    setUpdateData={setUpdateData}\r\n                />\r\n            </PayPalScriptProvider>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
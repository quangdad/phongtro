{"ast":null,"code":"var _jsxFileName = \"F:\\\\PHONGTRO2\\\\PHONGTRO\\\\client\\\\src\\\\ultils\\\\fn.js\";\nimport icons from \"./icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  AiFillStar\n} = icons;\nexport const renderStar = number => {\n  if (number > 5) number = 5;\n  const stars = [];\n\n  for (let i = 0; i < number; i++) stars.push( /*#__PURE__*/_jsxDEV(AiFillStar, {\n    size: 16,\n    color: \"#f59e0b\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 49\n  }, this));\n\n  for (let i = number; i < 5; i++) stars.push( /*#__PURE__*/_jsxDEV(AiFillStar, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 49\n  }, this));\n\n  return stars;\n};\nexport function getDaysInMonth(customTime, number) {\n  var _Date, _Date2, _Date3;\n\n  const endDay = ((_Date = new Date(customTime)) === null || _Date === void 0 ? void 0 : _Date.getDate()) || new Date().getDate();\n  const days = number || 15;\n  const endPreviousMonth = new Date((_Date2 = new Date(customTime)) === null || _Date2 === void 0 ? void 0 : _Date2.getFullYear(), (_Date3 = new Date(customTime)) === null || _Date3 === void 0 ? void 0 : _Date3.getMonth(), 0).getDate();\n  let day = 1;\n  let prevDayStart = 1;\n  const daysInMonths = [];\n\n  while (prevDayStart <= +endPreviousMonth) {\n    const month = new Date().getMonth();\n    const year = new Date().getFullYear() % 1000;\n    daysInMonths.push(`${prevDayStart < 10 ? '0' + prevDayStart : prevDayStart}-${month < 10 ? `0${month}` : month}-${year}`);\n    prevDayStart += 1;\n  }\n\n  while (day <= +endDay) {\n    const month = new Date().getMonth() + 1;\n    const year = new Date().getFullYear() % 1000;\n    daysInMonths.push(`${day < 10 ? '0' + day : day}-${month < 10 ? `0${month}` : month}-${year}`);\n    day += 1;\n  }\n\n  return daysInMonths.filter((el, index, self) => index > self.length - days - 2);\n}\nexport function getMonthInYear(customTime, number) {\n  const endMonth = new Date(customTime === null || customTime === void 0 ? void 0 : customTime.to).getMonth() + 1 || new Date().getMonth() + 1;\n  let month = 1;\n  const months = number || 8;\n  let startLastYear = 1;\n  const daysInMonths = [];\n\n  while (startLastYear <= 12) {\n    const year = new Date().getFullYear() % 1000;\n    daysInMonths.push(`${startLastYear < 10 ? `0${startLastYear}` : startLastYear}-${year - 1}`);\n    startLastYear += 1;\n  }\n\n  while (month <= +endMonth) {\n    const year = new Date().getFullYear() % 1000;\n    daysInMonths.push(`${month < 10 ? `0${month}` : month}-${year}`);\n    month += 1;\n  }\n\n  return daysInMonths.filter((el, index, self) => index > self.length - months - 2);\n}\nexport const getDaysInRange = (start, end) => {\n  const startDateTime = new Date(start).getTime();\n  const endDateTime = new Date(end).getTime();\n  return (endDateTime - startDateTime) / (24 * 60 * 60 * 1000);\n};\nexport const getMonthsInRange = (start, end) => {\n  let months;\n  const d1 = new Date(start);\n  const d2 = new Date(end);\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\n  months -= d1.getMonth();\n  months += d2.getMonth();\n  return months <= 0 ? 0 : months;\n};","map":{"version":3,"names":["icons","AiFillStar","renderStar","number","stars","i","push","getDaysInMonth","customTime","endDay","Date","getDate","days","endPreviousMonth","getFullYear","getMonth","day","prevDayStart","daysInMonths","month","year","filter","el","index","self","length","getMonthInYear","endMonth","to","months","startLastYear","getDaysInRange","start","end","startDateTime","getTime","endDateTime","getMonthsInRange","d1","d2"],"sources":["F:/PHONGTRO2/PHONGTRO/client/src/ultils/fn.js"],"sourcesContent":["import icons from \"./icons\"\r\n\r\nconst { AiFillStar } = icons\r\nexport const renderStar = (number) => {\r\n    if (number > 5) number = 5\r\n    const stars = []\r\n    for (let i = 0; i < number; i++) stars.push(<AiFillStar size={16} color='#f59e0b' />)\r\n    for (let i = number; i < 5; i++) stars.push(<AiFillStar size={16} />)\r\n\r\n    return stars\r\n}\r\nexport function getDaysInMonth(customTime, number) {\r\n    const endDay = new Date(customTime)?.getDate() || new Date().getDate()\r\n    const days = number || 15\r\n    const endPreviousMonth = new Date(new Date(customTime)?.getFullYear(), new Date(customTime)?.getMonth(), 0).getDate()\r\n    let day = 1\r\n    let prevDayStart = 1\r\n    const daysInMonths = []\r\n    while (prevDayStart <= +endPreviousMonth) {\r\n        const month = new Date().getMonth()\r\n        const year = new Date().getFullYear() % 1000\r\n        daysInMonths.push(`${prevDayStart < 10 ? '0' + prevDayStart : prevDayStart}-${month < 10 ? `0${month}` : month}-${year}`)\r\n        prevDayStart += 1\r\n    }\r\n    while (day <= +endDay) {\r\n        const month = new Date().getMonth() + 1\r\n        const year = new Date().getFullYear() % 1000\r\n        daysInMonths.push(`${day < 10 ? '0' + day : day}-${month < 10 ? `0${month}` : month}-${year}`)\r\n        day += 1\r\n    }\r\n    return daysInMonths.filter((el, index, self) => index > self.length - days - 2)\r\n}\r\nexport function getMonthInYear(customTime, number) {\r\n    const endMonth = new Date(customTime?.to).getMonth() + 1 || new Date().getMonth() + 1\r\n    let month = 1\r\n    const months = number || 8\r\n    let startLastYear = 1\r\n    const daysInMonths = []\r\n    while (startLastYear <= 12) {\r\n        const year = new Date().getFullYear() % 1000\r\n        daysInMonths.push(`${startLastYear < 10 ? `0${startLastYear}` : startLastYear}-${year - 1}`)\r\n        startLastYear += 1\r\n    }\r\n    while (month <= +endMonth) {\r\n        const year = new Date().getFullYear() % 1000\r\n        daysInMonths.push(`${month < 10 ? `0${month}` : month}-${year}`)\r\n        month += 1\r\n    }\r\n    return daysInMonths.filter((el, index, self) => index > self.length - months - 2)\r\n}\r\nexport const getDaysInRange = (start, end) => {\r\n    const startDateTime = new Date(start).getTime()\r\n    const endDateTime = new Date(end).getTime()\r\n    return (endDateTime - startDateTime) / (24 * 60 * 60 * 1000)\r\n}\r\nexport const getMonthsInRange = (start, end) => {\r\n    let months;\r\n    const d1 = new Date(start)\r\n    const d2 = new Date(end)\r\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n    months -= d1.getMonth();\r\n    months += d2.getMonth();\r\n    return months <= 0 ? 0 : months\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
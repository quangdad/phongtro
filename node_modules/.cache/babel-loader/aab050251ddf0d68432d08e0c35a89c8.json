{"ast":null,"code":"const validate = (payload, setInvalidFields) => {\n  let invalids = 0;\n  let fields = Object.entries(payload);\n  fields.forEach(item => {\n    if (item[1] === '' || !item[1]) {\n      setInvalidFields(prev => [...prev, {\n        name: item[0],\n        message: 'Bạn không được bỏ trống trường này.'\n      }]);\n      invalids++;\n    }\n  });\n  fields.forEach(item => {\n    switch (item[0]) {\n      case 'password':\n        if (item[1].length < 6) {\n          setInvalidFields(prev => [...prev, {\n            name: item[0],\n            message: 'Mật khẩu phải có tối thiểu 6 kí tự.'\n          }]);\n          invalids++;\n        }\n\n        break;\n\n      case 'phone':\n        if (!+item[1]) {\n          setInvalidFields(prev => [...prev, {\n            name: item[0],\n            message: 'Số điện thoại không hợp lệ.'\n          }]);\n          invalids++;\n        }\n\n        break;\n\n      case 'priceNumber':\n      case 'areaNumber':\n        if (+item[1] === 0) {\n          setInvalidFields(prev => [...prev, {\n            name: item[0],\n            message: 'Chưa đặt giá trị cho trường này.'\n          }]);\n          invalids++;\n        }\n\n        if (!+item[1]) {\n          setInvalidFields(prev => [...prev, {\n            name: item[0],\n            message: 'Trường này phải là số.'\n          }]);\n          invalids++;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  });\n  return invalids;\n};\n\nexport default validate;","map":{"version":3,"names":["validate","payload","setInvalidFields","invalids","fields","Object","entries","forEach","item","prev","name","message","length"],"sources":["F:/PHONGTRO2/PHONGTRO/client/src/ultils/Common/validateFields.js"],"sourcesContent":["\r\nconst validate = (payload, setInvalidFields) => {\r\n    let invalids = 0\r\n    let fields = Object.entries(payload)\r\n    fields.forEach(item => {\r\n        if (item[1] === '' || !item[1]) {\r\n            setInvalidFields(prev => [...prev, {\r\n                name: item[0],\r\n                message: 'Bạn không được bỏ trống trường này.'\r\n            }])\r\n            invalids++\r\n        }\r\n    })\r\n    fields.forEach(item => {\r\n        switch (item[0]) {\r\n            case 'password':\r\n                if (item[1].length < 6) {\r\n                    setInvalidFields(prev => [...prev, {\r\n                        name: item[0],\r\n                        message: 'Mật khẩu phải có tối thiểu 6 kí tự.'\r\n                    }])\r\n                    invalids++\r\n                }\r\n                break;\r\n            case 'phone':\r\n                if (!+item[1]) {\r\n                    setInvalidFields(prev => [...prev, {\r\n                        name: item[0],\r\n                        message: 'Số điện thoại không hợp lệ.'\r\n                    }])\r\n                    invalids++\r\n                }\r\n                break\r\n            case 'priceNumber':\r\n            case 'areaNumber':\r\n                if (+item[1] === 0) {\r\n                    setInvalidFields(prev => [...prev, {\r\n                        name: item[0],\r\n                        message: 'Chưa đặt giá trị cho trường này.'\r\n                    }])\r\n                    invalids++\r\n                }\r\n                if (!+item[1]) {\r\n                    setInvalidFields(prev => [...prev, {\r\n                        name: item[0],\r\n                        message: 'Trường này phải là số.'\r\n                    }])\r\n                    invalids++\r\n                }\r\n                break\r\n\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n    return invalids\r\n}\r\n\r\nexport default validate"],"mappings":"AACA,MAAMA,QAAQ,GAAG,CAACC,OAAD,EAAUC,gBAAV,KAA+B;EAC5C,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeL,OAAf,CAAb;EACAG,MAAM,CAACG,OAAP,CAAeC,IAAI,IAAI;IACnB,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,EAAZ,IAAkB,CAACA,IAAI,CAAC,CAAD,CAA3B,EAAgC;MAC5BN,gBAAgB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;QAC/BC,IAAI,EAAEF,IAAI,CAAC,CAAD,CADqB;QAE/BG,OAAO,EAAE;MAFsB,CAAV,CAAT,CAAhB;MAIAR,QAAQ;IACX;EACJ,CARD;EASAC,MAAM,CAACG,OAAP,CAAeC,IAAI,IAAI;IACnB,QAAQA,IAAI,CAAC,CAAD,CAAZ;MACI,KAAK,UAAL;QACI,IAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQI,MAAR,GAAiB,CAArB,EAAwB;UACpBV,gBAAgB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;YAC/BC,IAAI,EAAEF,IAAI,CAAC,CAAD,CADqB;YAE/BG,OAAO,EAAE;UAFsB,CAAV,CAAT,CAAhB;UAIAR,QAAQ;QACX;;QACD;;MACJ,KAAK,OAAL;QACI,IAAI,CAAC,CAACK,IAAI,CAAC,CAAD,CAAV,EAAe;UACXN,gBAAgB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;YAC/BC,IAAI,EAAEF,IAAI,CAAC,CAAD,CADqB;YAE/BG,OAAO,EAAE;UAFsB,CAAV,CAAT,CAAhB;UAIAR,QAAQ;QACX;;QACD;;MACJ,KAAK,aAAL;MACA,KAAK,YAAL;QACI,IAAI,CAACK,IAAI,CAAC,CAAD,CAAL,KAAa,CAAjB,EAAoB;UAChBN,gBAAgB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;YAC/BC,IAAI,EAAEF,IAAI,CAAC,CAAD,CADqB;YAE/BG,OAAO,EAAE;UAFsB,CAAV,CAAT,CAAhB;UAIAR,QAAQ;QACX;;QACD,IAAI,CAAC,CAACK,IAAI,CAAC,CAAD,CAAV,EAAe;UACXN,gBAAgB,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;YAC/BC,IAAI,EAAEF,IAAI,CAAC,CAAD,CADqB;YAE/BG,OAAO,EAAE;UAFsB,CAAV,CAAT,CAAhB;UAIAR,QAAQ;QACX;;QACD;;MAEJ;QACI;IAtCR;EAwCH,CAzCD;EA0CA,OAAOA,QAAP;AACH,CAvDD;;AAyDA,eAAeH,QAAf"},"metadata":{},"sourceType":"module"}